import{i as l,k as i,t as c}from"./index-BiBJDMyJ.js";const g=l((a,n)=>({cars:[],car:null,isLoading:!1,fetchCars:async()=>{var t,e;a({isLoading:!0});try{const r=await i.get("/cars");a({cars:r.data,isLoading:!1})}catch(r){const s=((e=(t=r.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to fetch cars";a({isLoading:!1}),c.error(s)}},fetchCarById:async t=>{var e,r;a({isLoading:!0,car:null});try{const s=await i.get(`/cars/${t}`);a({car:s.data,isLoading:!1})}catch(s){const o=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to fetch car details";a({isLoading:!1}),c.error(o)}},createCar:async t=>{var e,r;a({isLoading:!0});try{return await i.post("/cars",t),c.success("Car created successfully!"),await n().fetchCars(),a({isLoading:!1}),!0}catch(s){const o=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to create car";return a({isLoading:!1}),c.error(o),!1}},updateCar:async(t,e)=>{var r,s;a({isLoading:!0});try{return await i.put(`/cars/${t}`,e),c.success("Car updated successfully!"),await n().fetchCars(),a({isLoading:!1}),!0}catch(o){const d=((s=(r=o.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to update car";return a({isLoading:!1}),c.error(d),!1}},deleteCar:async t=>{var e,r;a({isLoading:!0});try{return await i.delete(`/cars/${t}`),c.success("Car deleted successfully!"),await n().fetchCars(),a({isLoading:!1}),!0}catch(s){const o=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to delete car";return a({isLoading:!1}),c.error(o),!1}}}));export{g as u};
